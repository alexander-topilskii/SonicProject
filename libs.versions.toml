[versions]
android-compile-sdk = "34"
android-min-sdk = "24"
android-target-sdk = "34"

agp = "8.3.2"
calfFilePicker = "0.5.5"
calfFilePickerCoil = "0.5.1"
chromecastSender = "0.29"
decompose = "3.0.0"
essenty = "2.1.0"
filekit = "0.6.1"
firebase-kmp = "2.1.0"
kmpauth = "2.0.0"
koinAndroid = "3.5.6"
kotlin = "2.0.20"
junit = "4.13.2"
junit-version = "1.2.1"
espresso-core = "3.6.1"
kotlinxDatetime = "0.6.1"
landscapistCoil3 = "2.4.0"
logging-interceptor = "4.12.0"
okio = "3.9.1"
peekabooImagePicker = "0.5.2"
retrofit = "2.11.0"
retrofit2-kotlinx-serialization-converter = "1.0.0"
serialization-json = "1.6.0"
compose-bom = "2024.09.02"
appcompat = "1.7.0"
ktor = "3.0.0-rc-1"
coroutines = "1.9.0"
kotlinx-serialization-json = "1.7.3"
coil3 = "3.0.0-alpha06"
firebase-bom = "33.3.0"
firebase-analytics = "22.1.0"
firebase-crashlytic = "19.1.0"
compose-plugin = "1.6.11"
google-services = "4.4.2"
google-services-ad = "23.5.0"
firebase-crashlytics = "3.0.2"
navigation-compose = "2.8.1"
room = "2.7.0-alpha08"
ksp = "2.0.20-1.0.24"
sqlite = "2.5.0-SNAPSHOT"
core-ktx = "1.13.1"
kotlinx-coroutines-core = "1.7.3"
lifecycle-runtime-ktx = "2.8.6"
activity-compose = "1.9.2"
ui-tooling = "1.6.7"
lifecycle-viewmodel-compose = "2.8.6"
serialization = "1.9.23"
firebase-common-ktx = "21.0.0"
sqliteBundledJvm = "2.5.0-alpha08"
#kotlinCompilerExtensionVersion = "1.5.8" #do not delete me

[libraries]
#decompose
chromecast-sender = { module = "com.pierfrancescosoffritti.androidyoutubeplayer:chromecast-sender", version.ref = "chromecastSender" }
decompose = { group = "com.arkivanov.decompose", name = "decompose", version.ref = "decompose" }
decompose-compose = { group = "com.arkivanov.decompose", name = "extensions-compose", version.ref = "decompose" }
decompose-essenty = { group = "com.arkivanov.essenty", name = "lifecycle-coroutines", version.ref = "decompose" }
essenty-lifecycle = { group = "com.arkivanov.essenty", name = "lifecycle", version.ref = "essenty" }
essenty-stateKeeper = { group = "com.arkivanov.essenty", name = "state-keeper", version.ref = "essenty" }
essenty-instanceKeeper = { group = "com.arkivanov.essenty", name = "instance-keeper", version.ref = "essenty" }
essenty-backHandler = { group = "com.arkivanov.essenty", name = "back-handler", version.ref = "essenty" }

# compose
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity-compose" }

# testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junit-version" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }

# Network
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-http = { group = "io.ktor", name = "ktor-http", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" } # ios
ktor-server-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
okhttp3-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "logging-interceptor" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
peekaboo-image-picker = { module = "io.github.onseok:peekaboo-image-picker", version.ref = "peekabooImagePicker" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit2-kotlinx-serialization-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofit2-kotlinx-serialization-converter" }

# DI
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinAndroid" }

# Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# navigation
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation-compose" }

# database
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-common = { group = "androidx.room", name = "room-common", version.ref = "room" }

sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }

# ui-coil
landscapist-coil3 = { module = "com.github.skydoves:landscapist-coil3", version.ref = "landscapistCoil3" }

coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3" }
coil-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil3" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil3" }
coil-mp = { module = "io.coil-kt.coil3:coil", version.ref = "coil3" }


# file picker
filekit-compose = { module = "io.github.vinceglb:filekit-compose", version.ref = "filekit" }
filekit-core = { module = "io.github.vinceglb:filekit-core", version.ref = "filekit" }

# Auth Google/ apple
kmpauth-firebase = { module = "io.github.mirzemehdi:kmpauth-firebase", version.ref = "kmpauth" }
kmpauth-google = { module = "io.github.mirzemehdi:kmpauth-google", version.ref = "kmpauth" }
kmpauth-uihelper = { module = "io.github.mirzemehdi:kmpauth-uihelper", version.ref = "kmpauth" }


# other
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle-runtime-ktx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle-viewmodel-compose" }

# firebase kmp
kmp-firebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "firebase-kmp" }
kmp-firebase-common = { module = "dev.gitlive:firebase-common-internal", version.ref = "firebase-kmp" }
kmp-firebase-database = { module = "dev.gitlive:firebase-database", version.ref = "firebase-kmp" }
kmp-firebase-firestore = { module = "dev.gitlive:firebase-firestore", version.ref = "firebase-kmp" }
kmp-firebase-storage = { module = "dev.gitlive:firebase-storage", version.ref = "firebase-kmp" }
kmp-firebase-analytics = { module = "dev.gitlive:firebase-analytics", version.ref = "firebase-kmp" }

# firebase not kmp
firebase-common-ktx = { group = "com.google.firebase", name = "firebase-common-ktx", version.ref = "firebase-common-ktx" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
an-firebase-auth = { module = "com.google.firebase:firebase-auth" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics", version.ref = "firebase-analytics" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics", version.ref = "firebase-crashlytic" }
androidx-sqlite-bundled-jvm = { group = "androidx.sqlite", name = "sqlite-bundled-jvm", version.ref = "sqliteBundledJvm" }

# ad
google-play-services-ads = { group = "com.google.android.gms", name = "play-services-ads", version.ref = "google-services-ad" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }

serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }

jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
google-services = { id = "com.google.gms.google-services", version.ref = "google-services" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebase-crashlytics" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }

